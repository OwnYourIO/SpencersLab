apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cloud-proxy-appset
spec:
  generators:
    # Generator for apps that should deploy to all cluster.
    - matrix:
        generators:
          - clusters: {}
          - list:
              elements:
                - appName: external-secrets-bitwarden
                  namespace: default
                  ServerSideApply: "false"
                - appName: local-proxy
                  namespace: default
                  ServerSideApply: "false"
                - appName: traefik
                  namespace: kube-system
                  ServerSideApply: "false"
                - appName: monitoring-agent
                  namespace: default
                  ServerSideApply: "true"
  template:
    metadata:
      name: "{{ `{{appName}}` }}"
      annotations:
        argocd.argoproj.io/manifest-generate-paths: ".;.."
    spec:
      project: default
      source:
        repoURL: "{{ `{{ metadata.annotations.services.repo }}` }}"
        targetRevision: main
        path: "{{ `{{ metadata.annotations.services.repo.path }}`}}/{{ `{{appName}}` }}/{{ `{{ metadata.annotations.stage }}` }}"
        helm:
          parameters:
            - name: domain
              value: "{{ `{{ metadata.annotations.domain }}` }}"
            - name: clusterName
              value: "{{ `{{ metadata.annotations.clusterName }}` }}"
            - name: kube-prometheus-stack.prometheus.prometheusSpec.remoteWrite[0].name
              value: "storage"
            - name: base.domain
              value: "{{ `{{ metadata.annotations.domain }}` }}"
            - name: base.clusterName
              value: "{{ `{{ metadata.annotations.clusterName }}` }}"
            - name: base.argo-cd.configs.cm.url
              value: "{{ `https://cluster.{{ metadata.annotations.clusterName }}.{{ metadata.annotations.domain }}` }}"
            - name: kube-prometheus-stack.prometheus.prometheusSpec.remoteWrite[0].url
              value: "{{ `https://prometheus.{{ metadata.annotations.domain }}/api/v1/write` }}"
            - name: middleware.oidc-keycloak.enabled
              value: "true"
            - name: middleware.whitelist.enabled
              value: "true"
          valueFiles:
        #    #- ../common.values.yaml
            - values.yaml
      destination:
        name: "{{ `{{name}}` }}"
        namespace: "{{ `{{namespace}}` }}"
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          # Needed for: https://github.com/prometheus-community/helm-charts/issues/3345
          - ServerSideApply={{ `{{ServerSideApply}}` }}

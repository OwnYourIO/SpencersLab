{{ if (index .Values "initialInstall") }}
---
# Doing the if condition like this was the only way I could get validation to pass.
# putting it closer to the selector failed validation (though I'll bet the generated code was fine)
# So I went the verbose way. Update both if changes are needed.
{{ if (index $.Values "bitwardenIds" "cert-manager-solver-token") }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: default
spec:
  acme:
    email: {{ $.Values.letsEncryptEmail | quote }}
    server: https://acme-v02.api.letsencrypt.org/directory
    #server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      # An empty 'selector' means that this solver matches all domains
      - selector: {}
        # This should be overridden by the umbrella chart when other solvers are needed.
        dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cert-manager-solver-token
              key: password
...
{{ else }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: default
spec:
  acme:
    email: {{ $.Values.letsEncryptEmail | quote }}
    server: https://acme-v02.api.letsencrypt.org/directory
    #server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      # An empty 'selector' means that this solver matches all domains
      - selector: {}
        # This should be overridden by the umbrella chart when other solvers are needed.
        http01:
...
{{ end }}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-certificate
  namespace: default
spec:
  dnsNames:
    - "*.{{ $.Values.domain }}"
  secretName: wildcard-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
...

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-certificate-cluster
  namespace: default
spec:
  dnsNames:
    - "*.{{ $.Values.clusterName }}.{{ $.Values.domain }}"
  secretName: cluster-wildcard-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: traefik.io/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: default
spec:
  defaultCertificate:
    secretName: cluster-wildcard-cert
...
{{ end }}

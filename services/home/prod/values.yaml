bitwardenIds:
  argocd-sso-secret: 6bc8ead2-faf6-4548-9831-b1a501646625

mosquitto: 
  ingress:
    main:
      hosts:
        # Specify external host name
        - host: mqtt.spencerslab.com
          paths:
            - path: "/"
              pathType: Prefix

generic-device-plugin:
  app-template:
    configMaps:
      config:
        enabled: true
        data:
          devices.yaml: |-
            devices:
              - name: zigbee
                groups:
                  - paths:
                      - path: /dev/ttyUSB1
              - name: zwave
                groups:
                  - paths:
                      - path: /dev/ttyUSB0
              - name: snd
                groups:
                  - paths:
                      - path: /dev/snd

zigbee2mqtt:
  bitwardenIds:
    zigbee2mqtt: 0164cfbc-dd85-43af-a4cc-b13f00108bde
  app-template:
    controllers:
      zigbee2mqtt:
        containers:
          main:
            image: 
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 1.39.1
            env:
              TZ: America/Denver
              #DEBUG: zigbee-herdsman*
              #ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: debug
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://zigbee2mqtt.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://home.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 4
              ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 57600
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: /dev/ttyUSB1
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: ezsp
    ingress:
      zigbee2mqtt:
        annotations:
          hajimari.io/url: https://zigbee2mqtt.spencerslab.com
        hosts:
          - host: &host "zigbee2mqtt.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: zigbee2mqtt
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

snapcast:
  app-template:
    controllers:
      snapcast:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver
              HOME: /tmp/

    ingress:
      snapserver:
        hosts:
          - host: &host "snapserver.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: snapcast-http
                  port: websocket
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

    configMaps:
      snapserver-conf:
        data:
          snapserver.conf: |-
            [stream]
            stream = tcp://0.0.0.0?name=MusicAssistant&port=4953
            source = pipe:///tmp/snapfifo?name=default
            source = process:///usr/bin/roc-recv?name=SpencersStream&buffer=200&params=--target-latency 200ms --rate 48000 --output=file:- --output-format=s16 --source=rtp+rs8m://0.0.0.0:10001 --repair=rs8m://0.0.0.0:10002 --control=rtcp://0.0.0.0:10003
            source = process:///usr/bin/squeezelite?name=LMS&params=-n "LMS" -s home-logitech-media-server.default -o - -a 16 -r 48000
            stream = meta:///SpencersStream/LMS/MusicAssistant/default?name=Spencer&mode=recent
            buffer = 300
            #source = pipe:///tmp/rocsink?name=rocfile

            [http]
            doc_root = /usr/share/snapserver/snapweb

    persistence:
      snapserver:
        type: configMap
        name: "{{ .Release.Name }}-snapcast-snapserver-conf"
        globalMounts:
          - path: /etc/snapserver.conf
            subPath: snapserver.conf

music-assistant:
  app-template:
    controllers:
      music-assistant:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver

    ingress:
      music-assistant:
        annotations:
          hajimari.io/url: https://music-assistant.spencerslab.com
        hosts:
          - host: &host "music-assistant.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: music-assistant
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

ledfx:
  app-template:
    defaultPodOptions:
      hostname: house-lights
    controllers:
      ledfx:
        containers:
          main:
            env:
              # Woulda used a different name, but HOST clearly is for a snapcast.
              HOST: music-assistant.spencerslab.com
          #  resources:
          #    limits:
          #      squat.ai/snd: 1
    ingress:
      ledfx:
        annotations:
          hajimari.io/url: https://ledfx.spencerslab.com
        hosts:
          - host: &host "ledfx.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: ledfx
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert
    persistence:
      config:
        existingClaim: ledfx
        advancedMounts:
          ledfx:
            main:
              - path: /app/ledfx-config/

hyperion:
  app-template:
    controllers:
      hyperion:
        containers:
          main:
            env:
              TZ: America/Denver
              PUID: 911
              PGID: 1000
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: 
                  - ALL
        pod:
          securityContext:
            #runAsNonRoot: false
            #runAsUser: 911
            fsGroup: 911
            fsGroupChangePolicy: OnRootMismatch

    ingress:
      hyperion:
        annotations:
          hajimari.io/url: https://hyperhdr.spencerslab.com
        hosts:
          - host: &host "hyperhdr.spencerslab.com"
            paths:
              - path: /
                service:
                  identifier: hyperion

logitech-media-server:
  app-template:
    controllers:
      logitech-media-server:
        containers:
          main:
            env:
              TZ: America/Denver
              EXTRA_ARGS: "--advertiseaddr=lms.spencerslab.com"

    ingress:
      lms:
        annotations:
          hajimari.io/url: https://lms.spencerslab.com
        hosts:
          - host: &host "lms.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: logitech-media-server
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

    configMaps:
      init:
        data: 
          custom-entrypoint.sh: |-
            #!/bin/sh
            : "${SQUEEZE_UID:=1000}"
            : "${SQUEEZE_GID:=1000}"

            groupadd -g "$SQUEEZE_GID" squeezeboxserver

            useradd -u "$SQUEEZE_UID" -g "$SQUEEZE_GID" \
                -d "$SQUEEZE_VOL" \
                -c 'Logitech Media Server' \
                squeezeboxserver

            if [ "$SQUEEZE_VOL" ] && [ -d "$SQUEEZE_VOL" ]; then
                for subdir in prefs logs cache; do
                    mkdir -p "$SQUEEZE_VOL/$subdir"
                done
            fi

            # This has to happen every time in case our new uid/gid is different
            # from what was previously used in the volume.
            chown -R squeezeboxserver:squeezeboxserver "$SQUEEZE_VOL"


            #apt update -qq
            #apt install -y ffmpeg pulseaudio alsa-utils cava vim
            #mkdir -p /var/run/dbus
            #dbus-uuidgen > /var/lib/dbus/machine-id
            #dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
            #systemctl --global disable pulseaudio.service pulseaudio.socket
            #usermod -aG audio root
            #mkdir -p /var/run/pulse/.config/pulse/
            #touch /var/run/pulse/.config/pulse/cookie
            #exec runuser -u squeezeboxserver -- pulseaudio --verbose --exit-idle-time=-1 --disallow-exit --load="module-native-protocol-tcp auth-anonymous=true port=1337" &

            exec runuser -u squeezeboxserver -- /start-squeezebox.sh "$@"

    persistence:
      playlists:
        existingClaim: lms-playlists
        globalMounts:
          - path: /playlists
      config:
        existingClaim: lms-config
        globalMounts:
          - path: /squeezebox
      music:
        existingClaim: lms-music
        globalMounts:
          - path: /music
      init-config-map:
        type: configMap
        name: '{{ .Release.Name }}-logitech-media-server-init'
        defaultMode: 0777
        globalMounts:
          - path: /entrypoint.sh
            subPath: custom-entrypoint.sh

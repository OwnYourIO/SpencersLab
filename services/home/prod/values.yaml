bitwardenIds:
  argocd-sso-secret: 6bc8ead2-faf6-4548-9831-b1a501646625
  wekan-sso-secret: 68ce2bae-c00f-4293-8325-b23000060637

seaweedfs-csi-driver:
  seaweedfsFiler: "seaweedfs-filer.infra.spencerslab.com:8880,seaweedfs-filer.infra.spencerslab.com:8881,seaweedfs-filer.infra.spencerslab.com:8882,seaweedfs-filer.infra.spencerslab.com:8883,seaweedfs-filer.infra.spencerslab.com:8884"

mosquitto: 
  ingress:
    main:
      hosts:
        # Specify external host name
        - host: mqtt.spencerslab.com
          paths:
            - path: "/"
              pathType: Prefix

generic-device-plugin:
  app-template:
    configMaps:
      config:
        enabled: true
        data:
          devices.yaml: |-
            devices:
              - name: zigbee
                groups:
                  - paths:
                      - path: /dev/ttyUSB1
              - name: zwave
                groups:
                  - paths:
                      - path: /dev/ttyUSB0
              - name: snd
                groups:
                  - paths:
                      - path: /dev/snd

zigbee2mqtt:
  bitwardenIds:
    zigbee2mqtt: 0164cfbc-dd85-43af-a4cc-b13f00108bde
  app-template:
    controllers:
      zigbee2mqtt:
        containers:
          main:
            image: 
              repository: ghcr.io/koenkk/zigbee2mqtt
              tag: 1.39.1
            env:
              TZ: America/Denver
              #DEBUG: zigbee-herdsman*
              #ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_LEVEL: debug
              ZIGBEE2MQTT_CONFIG_FRONTEND_URL: https://zigbee2mqtt.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_SERVER: mqtt://home.spencerslab.com
              ZIGBEE2MQTT_CONFIG_MQTT_VERSION: 4
              ZIGBEE2MQTT_CONFIG_SERIAL_BAUDRATE: 57600
              ZIGBEE2MQTT_CONFIG_SERIAL_PORT: /dev/ttyUSB1
              ZIGBEE2MQTT_CONFIG_SERIAL_ADAPTER: ezsp
    ingress:
      zigbee2mqtt:
        annotations:
          hajimari.io/url: https://zigbee2mqtt.spencerslab.com
        hosts:
          - host: &host "zigbee2mqtt.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: zigbee2mqtt
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

snapcast:
  app-template:
    controllers:
      snapcast:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver
              HOME: /tmp/

    ingress:
      snapserver:
        hosts:
          - host: &host "snapserver.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: snapcast-http
                  port: websocket
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

    configMaps:
      snapserver-conf:
        data:
          snapserver.conf: |-
            [stream]
            source = process:///usr/bin/squeezelite?name=LMS&params=-n "LMS" -s home-logitech-media-server.default -o - -a 16 -r 48000 -m 11:22:33:44:55:66
            source = process:///usr/bin/roc-recv?name=SpencersStream&buffer=300&params=--target-latency 200ms --rate 48000 --output=file:- --output-format=s16 --source=rtp+rs8m://0.0.0.0:10001 --repair=rs8m://0.0.0.0:10002 --control=rtcp://0.0.0.0:10003
            stream = tcp://0.0.0.0?name=MusicAssistant&port=4953
            source = pipe:///tmp/snapfifo?name=default
            stream = meta:///SpencersStream/LMS/MusicAssistant/default?name=Spencer&mode=recent
            # Snapserver kinda just stops playing to a speaker if it can't keep up.
            # Have to extend this to 700ms to support BT speakers. 300 works if there are no BT considerations.
            buffer = 700
            #source = pipe:///tmp/rocsink?name=rocfile

            [http]
            doc_root = /usr/share/snapserver/snapweb

    persistence:
      snapserver:
        type: configMap
        name: "{{ .Release.Name }}-snapcast-snapserver-conf"
        globalMounts:
          - path: /etc/snapserver.conf
            subPath: snapserver.conf

music-assistant:
  app-template:
    controllers:
      music-assistant:
        containers:
          main:
            env:
              LOG_LEVEL: debug
              TZ: America/Denver

    ingress:
      music-assistant:
        annotations:
          hajimari.io/url: https://music-assistant.spencerslab.com
        hosts:
          - host: &host "music-assistant.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: music-assistant
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

ledfx:
  app-template:
    defaultPodOptions:
      hostname: house-lights
    controllers:
      ledfx:
        containers:
          main:
            env:
              # Woulda used a different name, but looking through the entrypoint.sh HOST is clearly intended for a snapserver
              HOST: snapserver.spencerslab.com
              PLAYER_ID: house-lights
          #  resources:
          #    limits:
          #      squat.ai/snd: 1
    ingress:
      ledfx:
        annotations:
          hajimari.io/url: https://ledfx.spencerslab.com
        hosts:
          - host: &host "ledfx.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: ledfx
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert
    # TODO: Add this to the image.
    configMaps:
      entrypoint-override:
        data: 
          custom-entrypoint.sh: |-
            #!/bin/bash

            # Start avahi daemon for WLED auto discovery
            avahi-daemon --daemonize --no-drop-root

            # https://superuser.com/questions/1539634/pulseaudio-daemon-wont-start-inside-docker
            # Start the pulseaudio server
            rm -rf /var/run/pulse /var/lib/pulse /root/.config/pulse
            pulseaudio -D --verbose --exit-idle-time=-1 --system --disallow-exit

            if [[ -v FORMAT ]]; then
                ./pipe-audio.sh
            fi

            if [[ -v HOST ]]; then
                snapclient --host "$HOST" --hostID "${PLAYER_ID:-None}" --daemon 1
            fi

            if [[ -v SQUEEZE ]]; then
                ./squeeze.sh
            fi

            mkdir /app/ledfx-config

            mv -vn /app/config.yaml /app/ledfx-config/
            mkdir /root/.ledfx
            ledfx -c /app/ledfx-config

    persistence:
      config:
        existingClaim: ledfx
        advancedMounts:
          ledfx:
            main:
              - path: /app/ledfx-config/
      entrypoint-override:
        type: configMap
        name: '{{ .Release.Name }}-ledfx-entrypoint-override'
        defaultMode: 0777
        globalMounts:
          - path: /app/entrypoint.sh
            subPath: custom-entrypoint.sh


hyperion:
  app-template:
    controllers:
      hyperion:
        containers:
          main:
            env:
              TZ: America/Denver
              PUID: 911
              PGID: 1000
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop: 
                  - ALL
        pod:
          securityContext:
            #runAsNonRoot: false
            #runAsUser: 911
            fsGroup: 911
            fsGroupChangePolicy: OnRootMismatch

    ingress:
      hyperion:
        annotations:
          hajimari.io/url: https://hyperhdr.spencerslab.com
        hosts:
          - host: &host "hyperhdr.spencerslab.com"
            paths:
              - path: /
                service:
                  identifier: hyperion

logitech-media-server:
  app-template:
    controllers:
      logitech-media-server:
        containers:
          main:
            env:
              TZ: America/Denver
              EXTRA_ARGS: "--advertiseaddr=lms.spencerslab.com"

    ingress:
      lms:
        annotations:
          hajimari.io/url: https://lms.spencerslab.com
        hosts:
          - host: &host "lms.spencerslab.com"
            paths: &paths
              - path: /
                service:
                  identifier: logitech-media-server
                  port: http
        tls:
          - hosts:
              - *host
            secretName: wildcard-cert

    configMaps:
      init:
        data: 
          custom-entrypoint.sh: |-
            #!/bin/sh
            : "${SQUEEZE_UID:=1000}"
            : "${SQUEEZE_GID:=1000}"

            groupadd -g "$SQUEEZE_GID" squeezeboxserver

            useradd -u "$SQUEEZE_UID" -g "$SQUEEZE_GID" \
                -d "$SQUEEZE_VOL" \
                -c 'Logitech Media Server' \
                squeezeboxserver

            if [ "$SQUEEZE_VOL" ] && [ -d "$SQUEEZE_VOL" ]; then
                for subdir in prefs logs cache; do
                    mkdir -p "$SQUEEZE_VOL/$subdir"
                done
            fi

            # This has to happen every time in case our new uid/gid is different
            # from what was previously used in the volume.
            chown -R squeezeboxserver:squeezeboxserver "$SQUEEZE_VOL"


            #apt update -qq
            #apt install -y ffmpeg pulseaudio alsa-utils cava vim
            #mkdir -p /var/run/dbus
            #dbus-uuidgen > /var/lib/dbus/machine-id
            #dbus-daemon --config-file=/usr/share/dbus-1/system.conf --print-address
            #systemctl --global disable pulseaudio.service pulseaudio.socket
            #usermod -aG audio root
            #mkdir -p /var/run/pulse/.config/pulse/
            #touch /var/run/pulse/.config/pulse/cookie
            #exec runuser -u squeezeboxserver -- pulseaudio --verbose --exit-idle-time=-1 --disallow-exit --load="module-native-protocol-tcp auth-anonymous=true port=1337" &

            exec runuser -u squeezeboxserver -- /start-squeezebox.sh "$@"

    persistence:
      playlists:
        existingClaim: lms-playlists
        globalMounts:
          - path: /playlists
      config:
        existingClaim: lms-config
        globalMounts:
          - path: /squeezebox
      music:
        existingClaim: music-shared
        globalMounts:
          - path: /music
      init-config-map:
        type: configMap
        name: '{{ .Release.Name }}-logitech-media-server-init'
        defaultMode: 0777
        globalMounts:
          - path: /entrypoint.sh
            subPath: custom-entrypoint.sh

immich:
  postgresql:
    enabled: true

  server:
    ingress:
      main:
        enabled: true
        hosts:
          - host: immich.local
            paths:
              - path: "/"
        tls: []
  persistence:
    library:
      existingClaim: immich-library

paperless:
  controllers:
    main:
      containers:
        main:
          image:
            repository: ghcr.io/paperless-ngx/paperless-ngx
            tag: 2.13.4@sha256:275b8ef0b0d9026cff6f04fbf79b28077fb08fe7f33c52bd73531cfc692b361a
          env:
            PAPERLESS_TIME_ZONE: America/Denver
            PAPERLESS_URL: https://paperless.spencerslab.com
            USERMAP_UID: 33
            USERMAP_GID: 33
            PAPERLESS_CONSUMPTION_DIR: /paperless/consume
            PAPERLESS_DATA_DIR: /paperless/data
            PAPERLESS_MEDIA_ROOT: /paperless/media
            PAPERLESS_CONSUMER_DELETE_DUPLICATES: true
            PAPERLESS_CONSUMER_RECURSIVE: true
            PAPERLESS_OCR_LANGUAGE: eng
            PAPERLESS_DISABLE_REGULAR_LOGIN: true
            PAPERLESS_REDIRECT_LOGIN_TO_SSO: true
            PAPERLESS_OCR_PAGES: 2
            PAPERLESS_THREADS_PER_WORKER: 1
            PAPERLESS_TIKA_ENABLED: 1
            PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
            PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
            PAPERLESS_WEBSERVER_WORKERS: 1
          probes:
            liveness:
              enabled: true
              type: HTTP
            readiness:
              enabled: true
              type: HTTP
            startup:
              enabled: true
              spec:
                failureThreshold: 30
                periodSeconds: 5
              type: HTTP
          resources:
            limits:
              memory: 1.2Gi
            requests:
              cpu: 40m
              memory: 1.2Gi
        gotenburg:
          env:
            DISABLE_GOOGLE_CHROME: '1'
          image:
            repository: gotenberg/gotenberg
            tag: 8.13.0@sha256:1917c80269a30d53979f8354bce6aabb8a2a62a38f727362c394edfbceaa7640
          resources:
            limits:
              memory: 30Mi
            requests:
              cpu: 10m
              memory: 30Mi
        redis:
          image:
            repository: redis
            tag: 7.4.1@sha256:a06cea905344470eb49c972f3d030e22f28f632c1b4f43bbe4a26a4329dd6be5
          resources:
            limits:
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 18Mi
        tika:
          image:
            repository: ghcr.io/paperless-ngx/tika
            tag: 2.9.1-minimal@sha256:20db3df89eaeb1b271dd840888fe909b88b12f4b86ef641ec07a1d45d4c5168f
          resources:
            limits:
              memory: 220Mi
            requests:
              cpu: 10m
              memory: 220Mi

  service:
    main:
      controller: main
      ports:
        http:
          port: 8000
  ingress:
    main:
      hosts:
        - host: paperless.spencerslab.com
          paths:
            - path: /
              service:
                identifier: main
                port: http
      tls:
        - secretName: wildcard-cert
          hosts:
            - paperless.spencerslab.com

  persistence:
    data:
      existingClaim: paperless-ngx-data
      globalMounts:
      - path: /paperless

wekan:
  root_url: https://wekan.spencerslab.com
  ingress:
    enabled: true
    path: /
    pathtype: ImplementationSpecific
    hosts: 
      - wekan.spencerslab.com 
    tls: 
      - secretName: wildcard-cert
        hosts:
          - wekan.spencerslab.com
  env:
    - name: "MONGO_URL"
      value: "mongodb://home-mongodb:27017"
    - name: "DEBUG"
      value: "true"
    - name: "OAUTH2_ENABLED"
      value: "true"
    - name: "OAUTH2_SERVER_URL"
      value: "https://login.spencerslab.com"
    - name: "OAUTH2_AUTH_ENDPOINT"
      value: "/realms/SpencersLab/protocol/openid-connect/auth"
    - name: "OAUTH2_USERINFO_ENDPOINT"
      value: "/realms/SpencersLab/protocol/openid-connect/userinfo"
    - name: "OAUTH2_TOKEN_ENDPOINT"
      value: "/realms/SpencersLab/protocol/openid-connect/token"
    - name: "OAUTH2_ID_MAP"
      value: "preferred_username"
    - name: "OAUTH2_USERNAME_MAP"
      value: "preferred_username"
    - name: "OAUTH2_FULLNAME_MAP"
      value: "given_name"
    - name: "OAUTH2_EMAIL_MAP"
      value: "email"
  extraEnvFrom: |
    - secretRef:
        name: "wekan-sso"

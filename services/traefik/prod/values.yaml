keycloak:
  realm: OVERRIDE_VIA_CUSTOM_VALUES

bitwardenIds:
  crowdsec-secret: OVERRIDE_VIA_CUSTOM_VALUES
  traefik-sso-secret: OVERRIDE_VIA_CUSTOM_VALUES

domain: OVERRIDE_VIA_APPSET
clusterName: OVERRIDE_VIA_APPSET

cert-manager:
  installCRDs: true

traefik:
  additionalArguments:
    - "--api"
    - "--api.dashboard=true"
    - "--api.insecure=true"
    - "--serversTransport.insecureSkipVerify=true"
    - "--providers.file.filename=/data/user-allowlist.yaml"
    - "--providers.file.watch=true"
  dashboard: 
    enabled: true

  persistence:
    enabled: true
    size: 1Gi 

  providers:
    kubernetesCRD:
      allowCrossNamespace: true
      allowExternalNameServices: true
    kubernetesIngress:
      allowEmptyServices: true
      allowExternalNameServices: true

  experimental:
    plugins:
      geoblock:
        moduleName: "github.com/PascalMinder/geoblock"
        # renovate: depName=github.com/PascalMinder/geoblock
        version: "v0.2.8"
      keycloakopenid:
        moduleName: "github.com/jmcarbo/keycloakopenid"
        # renovate: depName=github.com/jmcarbo/keycloakopenid
        version: "v0.1.40"
      crowdsec:
        moduleName: github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
        # renovate: depName=github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin
        version: "v1.3.5"
      traefik-plugin-redirect-on-status:
        moduleName: "github.com/m-riedel/traefik-plugin-redirect-on-status"
        version: "v1.0.1"

  service:
    type: LoadBalancer
    spec:
      externalTrafficPolicy: Local

  metrics:
    prometheus:
      serviceMonitor:
        enabled: true
        namespace: default
        additionalLabels:
          release: monitoring-agent
          prometheus: system-monitoring-prometheus-prometheus

  # TODO: Use a reflector from the external-secrets namespace instead.
  # To create this secret:
  # kubectl create secret generic crowdsec-bouncer-key -n kube-system --from-literal="api_key=<THE_GENERATED_BOUNCER_API_KEY"
  volumes:
    - name: crowdsec-bouncer-key
      type: secret
      mountPath: /run/secrets/lapi
      subpath: api_key
      readOnly: true
    - name: traefik-sso
      type: secret
      mountPath: "/run/secrets/oidc"

  logs:
    #general:
    #  level: DEBUG
    access:
      enabled: true

crowdsec:
  container_runtime: containerd
  tls:
    enabled: true
  lapi:
    env:
      # TODO: Handle this better
      - name: TZ
        value: America/Denver
      - name: ENROLL_INSTANCE_NAME
        value: proxy-remote
      # Setting the enroll key after initial startup requires force enrollment which currently breaks the local API.
      - name: ENROLL_KEY
        valueFrom:
          secretKeyRef:
            name: crowdsec-keys
            key: ENROLL_KEY
      - name: LEVEL_DEBUG
        value: "true"
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: monitoring-agent
    persistentVolume:
      # -- Persistent volume for data folder. Stores e.g. registered bouncer api keys
      data:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 1Gi
      # -- Persistent volume for config folder. Stores e.g. online api credentials
      config:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 100Mi
  agent:
    acquisition:
      - namespace: kube-system
        podName: traefik-[0-9]*
        program: traefik
        poll_without_inotify: true
    env:
      # TODO: Handle this better
      - name: TZ
        value: America/Denver
      - name: COLLECTIONS
        value: >-
          crowdsecurity/linux
          crowdsecurity/traefik
          crowdsecurity/base-http-scenarios
          crowdsecurity/http-cve

    persistentVolume:
      # -- Persistent volume for config folder. Stores local config (parsers, scenarios etc.)
      config:
        enabled: true
        accessModes:
          - ReadWriteOnce
        size: 100Mi 
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          release: monitoring-agent

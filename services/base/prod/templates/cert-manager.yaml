# And Production would look something like this
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
  namespace: default
spec:
  acme:
    email: {{ $.Values.letsEncryptEmail | quote }}
    #server: https://acme-v02.api.letsencrypt.org/directory
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod-key
    solvers:
      # An empty 'selector' means that this solver matches all domains
      - selector: {}
        dns01:
          cloudflare:
            apiTokenSecretRef:
              name: cloudflare-token
              key: password
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-certificate
  namespace: default
spec:
  dnsNames:
    - "*.{{ $.Values.domain }}"
  secretName: wildcard-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: tls-certificate-cluster
  namespace: default
spec:
  dnsNames:
    - "*.{{ $.Values.clusterName }}.{{ $.domain }}"
  secretName: cluster-wildcard-cert
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: TLSStore
metadata:
  name: default
  namespace: default
spec:
  defaultCertificate:
    secretName: wildcard-cert
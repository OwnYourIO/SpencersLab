{{- range $name, $config := .Values.proxy.subdomains }}
{{- $subDomain := "" }} {{/* Initialize the variable */}}
{{- if $config.clusterBase | default false}}
{{- $subDomain = printf "%s.%s" $name $.Values.clusterName }}
{{- else }}
{{- $subDomain = $name }}
{{- end}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $subDomain | replace "." "-" }}-ingress"# 
  namespace: default
  annotations:
    # If middlewares is set manually, use that.
    {{- if $config.middlewares }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $config.middlewares }}
    # If ssoRedirect is utilized we need a middleware to redirect to sso. 
    {{- else if $config.ssoRedirectPath }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ list 
      $.Values.proxy.middlewares.entrypoint 
      (printf "default-redirect-%s@kubernetescrd" $name)
      $.Values.proxy.middlewares.allowListRemote 
      | join "," }}
    # Otherwise just use the userAuth middlewares.
    {{- else }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ list 
      $.Values.proxy.middlewares.entrypoint 
      $.Values.proxy.middlewares.userAuth 
      | join "," }}
    {{- end }}
    external-dns.alpha.kubernetes.io/target: "proxy-remote.{{ $.Values.domain }}"
  labels:
    external-dns: "enabled"
spec:
  tls:
    - hosts:
      - "{{ $subDomain }}.{{ $.Values.domain }}"
      secretName: wildcard-cert
  rules:
    - host: "{{ $subDomain }}.{{ $.Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                {{- if $config.service }}
                name: "{{ $config.service }}"
                {{- else }}
                name: "{{ $name }}-service"
                {{- end }}
                port:
                  number: 443
{{- end }}

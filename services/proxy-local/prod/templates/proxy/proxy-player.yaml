---
apiVersion: v1
kind: Service
metadata:
  name: player-service
  namespace: default
spec:
  type: ExternalName
  externalName: "jellyfin.{{ .Values.domain }}"
  ports:
    - port: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: player-ingress
  namespace: default
  annotations:
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-crowdsec@kubernetescrd,default-redirect-player-403-to-sso@kubernetescrd,user-allowlist-remote@file
    external-dns.alpha.kubernetes.io/target: "proxy-remote.{{ .Values.domain }}"
  labels:
    external-dns: "enabled"
spec:
  tls:
    - hosts:
      - "player.{{ $.Values.domain }}"
      secretName: wildcard-cert
  rules:
    - host: player.{{ .Values.domain}}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: player-service
                port:
                  number: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: player-sso-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: kube-system-crowdsec@kubernetescrd
spec:
  tls:
    - hosts:
      - "player.{{ $.Values.domain }}"
      secretName: wildcard-cert
  rules:
    - host: player.{{ .Values.domain }}
      http:
        paths:
          - path: /sso/OID/start/login{{ .Values.domain }}
            pathType: 
            backend:
              service:
                name: player-service
                port:
                  number: 443
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: player-proxied-ingress
  namespace: default
spec:
  entryPoints:
    - web
    - websecure
  tls:
    secretName: wildcard-cert
  routes:
    - match: Host(`player.{{ $.Values.domain }}`) && ClientIP(`10.0.0.0/16`)
      kind: Rule
      services:
        - name: player-service
          port: 443
      middlewares:
        - name: kube-system-crowdsec@kubernetescrd
        - name: redirect-player-403-to-sso
        - name: user-allowlist@file

---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirect-player-403-to-sso
spec:
  plugin:
    traefik-plugin-redirect-on-status:
      redirectCode: "307"
      redirectUri: https://player.{{ .Values.domain }}/sso/OID/start/login{{ .Values.domain }}
      status:
        - "403"

# - IP Based filtering (Traefik?)
# - Middleware for Traefik
# - Maybe external routes/ingress/egress
seaweedfs-csi-driver:
  seaweedfsFiler: "seaweedfs-filer-0.infra.spencerslab.com:8880,seaweedfs-filer-1.infra.spencerslab.com:8881,seaweedfs-filer-2.infra.spencerslab.com:8882,seaweedfs-filer-3.infra.spencerslab.com:8883,seaweedfs-filer-4.infra.spencerslab.com:8884"

bitwardenIds:
  argocd-sso-secret: 6bc8ead2-faf6-4548-9831-b1a501646625
  autossh-secret: 449d6ac2-847d-4b2b-b0f2-b21d00003fc1

qbittorrent:
  global:
    nameOverride: "qbittorrent"
  controllers:
    main:
      initContainers:
        install-vuetorrent:
          image: 
            repository: busybox
            tag: 1.36.1@sha256:c3839dd800b9eb7603340509769c43e146a74c63dca3045a8e7dc8ee07e53966
          command:
            - "/bin/sh"
            - -c
          args:
            - |
              # renovate: github-release depName=WDaan/VueTorrent
              VUETORRENT_VERSION="v2.8.0"
              rm -rf /config/vuetorrent
              busybox wget -qO- "https://github.com/WDaan/VueTorrent/releases/download/$${VUETORRENT_VERSION}/vuetorrent.zip" | busybox unzip -d /config -
      containers:
        main:
          image:
            repository: ghcr.io/onedr0p/qbittorrent
            tag: 5.0.1

          env:
            TZ: America/Denver
            QBITTORRENT__PORT: &port 8080
            QBITTORRENT__BT_PORT: &port-bt 58462
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              memory: 8Gi
      pod:
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: "OnRootMismatch"
          supplementalGroups: [10000]

  service:
    main:
      controller: main
      ports:
        http:
          port: *port
    bittorent:
      enabled: true
      controller: main
      type: LoadBalancer
      ports:
        bittorrent:
          enabled: true
          port: *port-bt
          protocol: TCP
          targetPort: *port-bt
      externalTrafficPolicy: Local

  ingress:
    main:
      enabled: true
      hosts:
        - host: "qbittorrent.spencerslab.com"
          paths:
            - path: /
              pathType: Prefix
              service: 
                identifier: main
                port: http
      tls:
        - secretName: wildcard-cert
          hosts:
            - "qbittorrent.spencerslab.com"

  persistence:
    config:
      enabled: true
      existingClaim: qbittorrent
      globalMounts:
        - path: /config

    media:
      enabled: true
      existingClaim: media
      advancedMounts:
        main:
          main:
          - path: /media

autossh:
  global:
    nameOverride: "autossh"
  controllers:
    main:
      containers:
        main:
          image:
            repository: ghcr.io/camptocamp/autossh
            tag: master

          env:
            TZ: America/Denver
            SSH_REMOTE_USER: proxy
            SSH_KEY: 
              secretKeyRef:
                name: autossh
                key: private-key
            SSH_REMOTE_HOST: remote-proxy.spencerslab.com
            SSH_REMOTE_PORT: 2222
            SSH_TUNNEL_PORT: 443
            SSH_TARGET_HOST: traefik.kube-system
            SSH_TARGET_PORT: 443
            SSH_BIND_IP: 0.0.0.0
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              memory: 8Gi
      pod:
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          fsGroup: 1000
          fsGroupChangePolicy: "OnRootMismatch"
          supplementalGroups: [1000]

pinchflat:
  controllers:
    pinchflat:
      containers:
        app:
          image:
            repository: ghcr.io/kieraneglin/pinchflat
            tag: v2024.10.30@sha256:b7b407edef530ccd49d4b0a1503d964227c11f330e05dfcfc8c1456d77ffafd5
          env:
            TZ: America/Denver
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /healthcheck
                  port: *port
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *probes
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
          resources:
            requests:
              cpu: 10m
              memory: 4Gi
  defaultPodOptions:
    securityContext:
      runAsNonRoot: true
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 10000]
      seccompProfile: { type: RuntimeDefault }
  service:
    app:
      controller: pinchflat
      ports:
        http:
          port: *port
  ingress:
    app:
          paths:
            - path: /
              service:
                identifier: app
                port: http
  persistence:
    config:
      existingClaim: pinchflat
    downloads:
      type: emptyDir
    tmp:
      type: emptyDir

metube:
  controllers:
    metube:
      containers:
        app:
          image:
            repository: ghcr.io/alexta69/metube
            tag: 2024-05-28@sha256:412790e1c97455487e75cb77cfb8ce5801fbf0a2782ee43adcb78096f8fcc161
          env:
            TZ: "America/Denver"
  defaultPodOptions:
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
      seccompProfile: { type: RuntimeDefault }
  service:
    app:
      controller: *app
      ports:
        http:
          port: 8081
  ingress:
    app:
      hosts:
          paths:
            - path: /
              service:
                identifier: app
                port: http
  persistence:
    downloads:

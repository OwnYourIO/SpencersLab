apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami-remote-ingress
  namespace: default
  #annotations:
  #  traefik.ingress.kubernetes.io/router.middlewares: kube-system-geoblock@file
    #traefik.ingress.kubernetes.io/router.middlewares: kube-system-crowdsec@kubernetescrd
spec:
  tls:
    - hosts:
      - "whoami-remote.{{ .Values.domain }}"

  rules:
    - host: "whoami-remote.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: whoami
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami-ingress
  namespace: default
  #annotations:
  #  traefik.ingress.kubernetes.io/router.middlewares: kube-system-geoblock@file
    #traefik.ingress.kubernetes.io/router.middlewares: kube-system-crowdsec@kubernetescrd
spec:
  tls:
    - hosts:
      - "whoami.{{ .Values.domain }}"

  rules:
    - host: "whoami.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: proxy-service
                port:
                  number: 443

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whoami
  template:
    metadata:
      labels:
        app: whoami
    spec:
      containers:
        - name: whoami
          image: traefik/whoami

---
apiVersion: v1
kind: Service
metadata:
  name: whoami
spec:
  selector:
    app: whoami
  ports:
    - protocol: TCP
      port: 80


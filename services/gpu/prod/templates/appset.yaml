apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: gpu-appset
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    # Generator for apps that should deploy to all cluster.
    - matrix:
        generators:
          - clusters: {}
          - list:
              elements:
                - serviceName: gpu
                  namespace: default
                  ServerSideApply: "true"
  template:
    metadata:
      name: '{{ `{{ .serviceName }}` }}'
      annotations:
        argocd.argoproj.io/manifest-generate-paths: ".;.."
    spec:
      project: default
      destination:
        name: "{{ `{{ .name }}` }}"
        namespace: "{{ `{{ .namespace }}` }}"
  templatePatch: |
    # Dynamic source configuration - toggle specific fields based on chart type
    spec:
      sources:
        - repoURL: '{{ `{{ index .metadata.annotations "services.repo" }}` }}'
          targetRevision: main
          ref: services
        - repoURL: '{{ `{{ index .metadata.annotations "values.repo" }}` }}'
          targetRevision: main
          ref: values
        - repoURL: '{{ `{{ index .metadata.annotations "services.repo" }}` }}'
          targetRevision: '{{ `{{ if eq .metadata.annotations.stage "prod" }}main{{ else }}{{ .metadata.annotations.stage }}{{ end }}` }}'
          path: '{{ `{{ index .metadata.annotations "services.repo.path" }}` }}/{{ `{{ .serviceName }}` }}/{{ `{{ index .metadata.annotations "stage" }}` }}'
          helm:
            parameters:
              - name: domain
                value: '{{ `{{ .metadata.annotations.domain }}` }}'
              - name: clusterName
                value: '{{ `{{ .metadata.annotations.clusterName }}` }}'
              - name: serviceName
                value: '{{ `{{ .serviceName }}` }}'
              - name: selfHeal
                value: '{{ `{{ index .metadata.annotations (printf "services.%s.selfHeal" .serviceName) }}` }}
              - name: appset.includeBase
                value: "true"
            valueFiles:
              - $services/{{ `{{ index .metadata.annotations "services.repo.path" }}` }}/{{ `{{ .serviceName }}` }}/{{ `{{ index .metadata.annotations "stage" }}` }}/values.yaml
              # Service-wide custom values URL (applies to ALL apps in this service):
              # Example: 
              # services.gpu.customValuesUrls: '["https://raw.githubusercontent.com/OwnYourIO/SpencersLab/refs/heads/main/custom-values/gpu/prod-values.yaml"]'
              {{ `{{- $serviceCustomValuesUrls := index .metadata.annotations (printf "services.%s.customValuesUrls" .serviceName) }}` }}
              {{ `{{- if $serviceCustomValuesUrls }}` }}
              {{ `{{- range mustFromJson $serviceCustomValuesUrls }}` }}
              - {{ `{{ . }}` }}
              {{ `{{- end }}` }}
              {{ `{{- end }}` }}
      syncPolicy:
        {{ `{{- if true }}` }}
        automated:
          prune: true
          selfHeal: true
        {{ `{{- end }}` }}
        syncOptions:
          - CreateNamespace=true
          # Needed for: https://github.com/prometheus-community/helm-charts/issues/3345
          - ServerSideApply={{ `{{ .ServerSideApply }}` }}

{{- range $name, $config := .Values.ingress.subdomains }}
{{- $subDomain := "" }} {{/* Initialize the variable */}}
{{- if $config.clusterBase | default false}}
{{- $subDomain = printf "%s.%s" $name $.Values.clusterName }}
{{- else }}
{{- $subDomain = $name }}
{{- end}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $subDomain | replace "." "-" }}-ingress"
  namespace: default
  annotations:
    # If middlewares is set manually, use that.
    {{- if $config.middlewares }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $config.middlewares }}
    {{- end }}
    #external-dns.alpha.kubernetes.io/target: "proxy-remote.{{ $.Values.domain }}"

spec:
  tls:
    - hosts:
      - "{{ $subDomain }}.{{ .Values.domain }}"
      secretName: wildcard-cert
  rules:
    - host: "{{ $subDomain }}.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ $config.service }}"
                port:
                  number: {{ $config.port }}

{{- if $config.serviceName }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ $config.serviceName }}-ingress"
  namespace: default
  annotations:
    # If middlewares is set manually, use that.
    {{- if $config.middlewares }}
    traefik.ingress.kubernetes.io/router.middlewares: {{ $config.middlewares }}
    {{- end }}
    #external-dns.alpha.kubernetes.io/target: "proxy-remote.{{ $.Values.domain }}"

    {{- if eq $.Values.ingress.dashboardProvider "homepage" }}
    {{- if $config.homepageEnabled }}
    gethomepage.dev/enabled: "{{ $config.homepageEnabled }}"
    {{- end }}
    {{- if $config.homepageGroup }}
    gethomepage.dev/group: "{{ $config.homepageGroup }}"
    {{- end }}
    {{- if $config.homepageName }}
    gethomepage.dev/name: "{{ $config.homepageName }}"
    {{- end }}
    {{- if $config.homepageDescription }}
    gethomepage.dev/description: "{{ $config.homepageDescription }}"
    {{- end }}
    {{- if $config.homepageIcon }}
    gethomepage.dev/icon: "{{ $config.homepageIcon }}"
    {{- end }}
    {{- if $config.homepageWeight }}
    gethomepage.dev/weight: "{{ $config.homepageWeight }}"
    {{- end }}
    {{- if $config.homepageInstance }}
    gethomepage.dev/instance: "{{ $config.homepageInstance }}"
    {{- end }}
    {{- if $config.homepageWidgetType }}
    gethomepage.dev/widget.type: "{{ $config.homepageWidgetType }}"
    {{- end }}
    {{- if $config.homepageWidgetUrl }}
    gethomepage.dev/widget.url: "{{ $config.homepageWidgetUrl }}"
    {{- end }}
    {{- if $config.homepagePodSelector }}
    gethomepage.dev/pod-selector: "{{ $config.homepagePodSelector }}"
    {{- end }}
    {{- end }}
  labels:
    external-dns: "enabled"
spec:
  tls:
    - hosts:
      - "{{ $config.serviceName }}.{{ $.Values.domain }}"
      secretName: wildcard-cert
  rules:
    - host: "{{ $config.serviceName }}.{{ $.Values.domain }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "{{ $config.service }}"
                port:
                  number: {{ $config.port }}
{{- end }}
{{- end }}

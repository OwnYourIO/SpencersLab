apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: home-appset
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    # Generator for apps that should deploy to all cluster.
    - matrix:
        generators:
          - clusters: {}
          - list:
              elements:
                - appName: flowise
                  # version: 1.0.0
                  # repository: https://example.com/helm
                  namespace: default
                  ServerSideApply: "false"
                - appName: langflow
                  # version: 1.0.0
                  # repository: https://example.com/helm
                  namespace: default
                  ServerSideApply: "false"
                - appName: n8n
                  # version: 1.0.0
                  # repository: https://example.com/helm
                  namespace: default
                  ServerSideApply: "false"
                # TODO: Enable these
                #- appName: qdrant
                #  # version: 1.0.0
                #  # repository: https://example.com/helm
                #  namespace: default
                #  ServerSideApply: "false"
                #- appName: neo4j
                #  # version: 1.0.0
                #  # repository: https://example.com/helm
                #  namespace: default
                #  ServerSideApply: "false"
                #- appName: langfuse
                #  # version: 1.0.0
                #  # repository: https://example.com/helm
                #  namespace: default
                #  ServerSideApply: "false"
                #- appName: searxng
                #  # version: 1.0.0
                #  # repository: https://example.com/helm
                #  namespace: default
                #  ServerSideApply: "false"
                - appName: supabase
                  # version: 1.0.0
                  # repository: https://example.com/helm
                  namespace: default
                  ServerSideApply: "false"
                - appName: archon
                  # version: 1.0.0
                  # repository: https://example.com/helm
                  namespace: default
                  ServerSideApply: "false"
                # Helm repository charts (external charts)
                - appName: seaweedfs-csi-driver
                  version: 0.2.3
                  repository: https://seaweedfs.github.io/seaweedfs-csi-driver/helm
                  namespace: default
                  ServerSideApply: "true"
                - appName: cloudnative-pg
                  version: 0.25.0
                  repository: https://cloudnative-pg.github.io/charts
                  namespace: default
                  ServerSideApply: "true"
                - appName: ollama
                  version: 1.26.0
                  repository: https://helm.otwld.com/
                  namespace: default
                  ServerSideApply: "false"
                  {{- if index .Values "ollama" }}
                  values: {{ index .Values "ollama" | toJson }}
                  {{- end }}
                - appName: open-webui
                  version: 7.2.0
                  repository: https://helm.openwebui.com/
                  namespace: default
                  ServerSideApply: "false"
                  {{- if index .Values "open-webui" }}
                  values: {{ index .Values "open-webui" | toJson }}
                  {{- end }}
                - appName: amd-gpu
                  version: 0.20.0
                  repository: https://rocm.github.io/k8s-device-plugin/
                  namespace: default
                  ServerSideApply: "true"
                - appName: coder
                  version: 2.25.1
                  repository: https://helm.coder.com/v2
                  namespace: default
                  ServerSideApply: "false"
                  {{- if index .Values "coder" }}
                  values: {{ index .Values "coder" | toJson }}
                  {{- end }}
  template:
    metadata:
      name: '{{ `{{.appName}}` }}'
      annotations:
        argocd.argoproj.io/manifest-generate-paths: ".;.."
    spec:
      project: default
      destination:
        name: "{{ `{{ .name }}` }}"
        namespace: "{{ `{{.namespace }}` }}"
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
          # Needed for: https://github.com/prometheus-community/helm-charts/issues/3345
          - ServerSideApply={{ `{{ .ServerSideApply }}` }}
  templatePatch: |
    {{ `{{- $valuesKey := .appName }}` }}
    {{ `{{- if hasKey . "alias" }}` }}
      {{ `{{- $valuesKey = .alias }}` }}
    {{ `{{- end }}` }}
    # Dynamic source configuration - toggle specific fields based on chart type
    spec:
      sources:
        - repoURL: '{{ `{{ index .metadata.annotations "services.repo" }}` }}'
          targetRevision: main
          ref: services
        - repoURL: '{{ `{{ index .metadata.annotations "values.repo" }}` }}'
          targetRevision: main
          ref: values
        - repoURL: '{{ `{{ dig "repository" (index .metadata.annotations "charts.repo") . }}` }}'
          targetRevision: "{{ `{{ dig "version" "main" . }}` }}"
          chart: "{{ `{{ .appName }}` }}"
          helm:
            parameters:
              - name: domain
                value: '{{ `{{ index .metadata.annotations "domain" }}` }}'
              - name: clusterName
                value: '{{ `{{ index .metadata.annotations "clusterName" }}` }}'
            valueFiles:
              - values.yaml
              - $services/{{ `{{ index .metadata.annotations "services.repo.path" }}` }}/gpu/{{ `{{ index .metadata.annotations "stage" }}` }}/values.yaml 
              - $values/{{ `{{ index .metadata.annotations "values.path" }}` }}/{{ `{{ .appName }}` }}/{{ `{{ index .metadata.annotations "stage" }}` }}-values.yaml 
            {{ `{{- if hasKey . "values" }}` }}
            valuesObject: {{ `{{ .values | toYaml | nindent 14 }}` }}
            {{ `{{- end }}` }}

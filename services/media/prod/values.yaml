bitwardenIds:
  argocd-sso-secret: 6bc8ead2-faf6-4548-9831-b1a501646625

seaweedfs-csi-driver:
  seaweedfsFiler: "seaweedfs-filer.infra.spencerslab.com:8880,seaweedfs-filer.infra.spencerslab.com:8881,seaweedfs-filer.infra.spencerslab.com:8882,seaweedfs-filer.infra.spencerslab.com:8883,seaweedfs-filer.infra.spencerslab.com:8884"

#jellyfin:
#  app-template:
#    controllers:
#      jellyfin:
#        pod:
#          securityContext:
#            runAsNonRoot: true
#            runAsUser: 568
#            # Using gid 2000 as "shared" group.
#            runAsGroup: 568
#            fsGroup: 568
#            fsGroupChangePolicy: OnRootMismatch
#            seccompProfile: { type: RuntimeDefault }
#            supplementalGroups:
#              - 44 # video
#              - 109 # render
#              - 105
#              - 568
#              - 1000
#              - 2000
#        containers:
#          app:
#            env:
#              JELLYFIN_PublishedServerUrl: https://jellyfin.spencerslab.com
#              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
#              JELLYFIN_FFmpeg__probesize: "50000000"
#              JELLYFIN_FFmpeg__analyzeduration: "50000000"
#    service:
#      app:
#        controller: jellyfin
#        type: LoadBalancer
#        ports:
#          http:
#            port: 8096
#    ingress:
#      app:
#        hosts:
#          - host: &host "jellyfin.spencerslab.com"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
#        tls:
#          - hosts:
#              - *host
#            secretName: wildcard-cert

jellyfin:
  env:
    - name: TZ
      value: America/Denver

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: jellyfin-config
      persistentVolumeClaim:
        claimName: jellyfin
    - name: jellyfin-share
      persistentVolumeClaim:
        claimName: jellyfin-share
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: jellyfin-config
      mountPath: "/config"
    - name: jellyfin-share
      mountPath: "/share"
    - name: media
      mountPath: /media/

jellyseerr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "jellyseerr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "jellyseerr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: jellyseerr-config
      persistentVolumeClaim:
        claimName: jellyseerr

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: jellyseerr-config
      mountPath: "/config"

lidarr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "lidarr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "lidarr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: lidarr-config
      persistentVolumeClaim:
        claimName: lidarr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: lidarr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 

prowlarr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "prowlarr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "prowlarr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: prowlarr-config
      persistentVolumeClaim:
        claimName: prowlarr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: prowlarr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 

navidrome:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "navidrome.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "navidrome.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: navidrome-config
      persistentVolumeClaim:
        claimName: navidrome
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: navidrome-config
      mountPath: "/config"
    - name: media
      mountPath: /music/
      subPath: Music

radarr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "radarr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "radarr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: radarr-config
      persistentVolumeClaim:
        claimName: radarr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: radarr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 

readarr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "readarr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "readarr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: readarr-config
      persistentVolumeClaim:
        claimName: readarr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: readarr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 

sonarr:
  env:
    - name: TZ
      value: America/Denver

  ingress:
    enabled: true
    hosts:
      - host: "sonarr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "sonarr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: sonarr-config
      persistentVolumeClaim:
        claimName: sonarr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: sonarr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 

unpackerr:
  env:
    - name: TZ
      value: America/Denver
  
  lidarr:
    enabled: true
  radarr: 
    enabled: true
  readarr: 
    enabled: true
  sonarr:
    enabled: true

  ingress:
    enabled: true
    hosts:
      - host: "unpackerr.spencerslab.com"
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: wildcard-cert
        hosts:
          - "unpackerr.spencerslab.com"

  # Additional volumes on the output Deployment definition.
  volumes:
    - name: unpackerr-config
      persistentVolumeClaim:
        claimName: unpackerr
    - name: media
      persistentVolumeClaim:
        claimName: media

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
    - name: unpackerr-config
      mountPath: "/config"
    - name: media
      mountPath: /media/
      # subPath: 
  
audiobookshelf:
  controllers:
    audiobookshelf:
      pod:
        securityContext:
          runAsUser: &uid 568
          runAsGroup: &gid 2000
          fsGroup: 2000
          fsGroupChangePolicy: OnRootMismatch
      containers:
        app:
          image:
            repository: ghcr.io/advplyr/audiobookshelf
            tag: 2.17.2
          #envFrom:
          #  - secretRef:
          #      name: audiobookshelf-secret
          env:
            TZ: America/Denver
            PORT: &port 8080
            AUDIOBOOKSHELF_UID: *uid
            AUDIOBOOKSHELF_GID: *gid
            CONFIG_PATH: /config
            METADATA_PATH: /config/metadata
          probes:
            liveness: &probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /healthcheck
                  port: *port
            readiness: *probes
          resources:
            requests:
              cpu: 50m
              memory: 200Mi
            limits:
              memory: 600Mi
  service:
    app:
      controller: audiobookshelf
      ports:
        http:
          port: *port
  ingress:
    main:
      hosts:
        - host: &host audiobookshelf.spencerslab.com
          paths:
            - path: /
              service:
                identifier: app
                port: http
      tls: 
        - secretName: wildcard-cert
          hosts: 
            - *host
  persistence:
    config:
      existingClaim: audiobookshelf
    media:
      existingClaim: media
